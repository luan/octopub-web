require './lib/octopub'

describe Octopub::Blog do
  subject { Octopub::Blog.new 'hakuna', 'matata', stub }

  describe "#clone_octopress" do
    it "uploads a tree to github" do
      tree = stub
      Octopub::OctopressCloner.should_receive(:clone)
      Octopub::TreeBuilder.should_receive(:build).
        with('tmp/octopress').
        and_return(tree)
      subject.should_receive(:commit).with(tree)
      subject.clone_octopress
    end
  end

  describe "#commit" do
    it "creates a commits over master" do
      refs_api, commits_api, trees_api = stub, stub, stub
      tree = stub

      subject.github.stub(git_data: stub(
        references: refs_api,
        commits: commits_api,
        trees: trees_api
      ))

      refs_api.should_receive(:get).
        with('hakuna', 'matata', 'heads/master').
        and_return('object' => { 'sha' => 'latest-commit'})

      trees_api.should_receive(:create).
        with('hakuna', 'matata', tree: tree).
        and_return('sha' => 'new-tree')

      commits_api.should_receive(:create).
        with('hakuna', 'matata',
             parents: ['latest-commit'],
             tree: 'new-tree',
             message: 'Octopub autogenerated commit.').
        and_return('sha' => 'new-commit')

      refs_api.should_receive(:update).
        with('hakuna', 'matata', 'heads/master', sha: 'new-commit', force: true)

      subject.commit(tree)
    end
  end
end
